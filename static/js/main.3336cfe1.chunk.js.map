{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchText","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","findByName","findByEmail","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,G,kBAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCNXC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJdM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC2CCG,E,kDA/Cb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,WAAYF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,WAAY,IALF,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,+BAOrC,IAAD,EAC0BC,KAAKN,MAA9Bb,EADD,EACCA,SAAUU,EADX,EACWA,WAYlB,IAAMU,EAAmBpB,EAASqB,QALlC,SAA6B1B,GAC3B,GAPe,SAACA,EAASe,GACzB,OAAOf,EAAQE,KAAKyB,cAAcC,SAASb,EAAWY,eAMlDE,CAAW7B,EAASe,IAJR,SAACf,EAASe,GAC1B,OAAOf,EAAQG,MAAMwB,cAAcC,SAASb,EAAWY,eAGhBG,CAAY9B,EAASe,GAC1D,OAAO,KAKX,OACE,sBAAKlB,UAAU,MAAf,UACE,uDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA1CVM,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3336cfe1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster}></Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n","import { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { CardList } from \"./components/card-list/card-list.component\";\r\nimport { SearchBox } from \"./components/search-box/search-box.component.jsx\";\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchText: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ monsters: users }));\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchText: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { monsters, searchText } = this.state;\r\n    var findByName = (monster, searchText) => {\r\n      return monster.name.toLowerCase().includes(searchText.toLowerCase());\r\n    };\r\n    var findByEmail = (monster, searchText) => {\r\n      return monster.email.toLowerCase().includes(searchText.toLowerCase());\r\n    };\r\n    function filterByNameOrEmail(monster) {\r\n      if (findByName(monster, searchText) || findByEmail(monster, searchText))\r\n        return true;\r\n    }\r\n\r\n    const filteredMonsters = monsters.filter(filterByNameOrEmail);\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Luft Monsters Rolodex</h1>\r\n        <SearchBox\r\n          placeholder=\"search monsters\"\r\n          handleChange={this.handleChange}\r\n        />\r\n        <CardList monsters={filteredMonsters} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}